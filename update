#! /bin/sh

PROG=$0
die() {
    echo
    echo "$@"
    exit 1
}

BASEDIR="$(dirname "$(readlink -f "$0")")"
echo "Script Dir: $BASEDIR"

cd "$BASEDIR" || die "Could not change to $BASEDIR"

[ -f "$BASEDIR/.env" ] || die "$BASEDIR/.env is required"

echo "Updating Repo"
git pull

echo "Using $BASEDIR/.env"
. "$BASEDIR/.env"

echo "DOTNET_CHANNELS: $DOTNET_CHANNELS"
echo "CACHE_ROOT: $CACHE_ROOT"
echo "DOTNET_CACHE_ROOT: $DOTNET_CACHE_ROOT"
echo "TRACKING_ROOT: $TRACKING_ROOT"

[ -z "$DOTNET_CHANNELS" ] && die "DOTNET_CHANNELS not defined"
[ -z "$CACHE_ROOT" ] && die "CACHE_ROOT not defined"
[ -z "$DOTNET_CACHE_ROOT" ] && die "DOTNET_CACHE_ROOT not defined"
[ -z "$TRACKING_ROOT" ] && die "TRACKING_ROOT not defined"

[ -d "$CACHE_ROOT/nuget/postgresql" ] || mkdir -p "$CACHE_ROOT/nuget/postgresql"
[ -d "$CACHE_ROOT/nuget/packages/nuget" ] || mkdir -p "$CACHE_ROOT/nuget/packages/nuget"
[ -d "$CACHE_ROOT/nuget/packages/funfair-release" ] || mkdir -p "$CACHE_ROOT/nuget/packages/funfair-release"
[ -d "$CACHE_ROOT/nuget/packages/funfair-prerelease" ] || mkdir -p "$CACHE_ROOT/nuget/packages/funfair-prerelease"

# Update scripts before building docker
cp "$BASEDIR/scripts/*" "$BASEDIR/cleanup/"
cp "$BASEDIR/scripts/*" "$BASEDIR/dependencies/"
cp "$BASEDIR/scripts/*" "$BASEDIR/packages/"
cp "$BASEDIR/scripts/*" "$BASEDIR/templates/"

echo "Updating docker"
sudo docker compose pull \
  && sudo docker compose build \
  && sudo docker compose up -d --remove-orphans

echo "Removing old images"
sudo docker image prune -f

echo "Done"