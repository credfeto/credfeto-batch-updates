#! /bin/bash

PROG=$0
SCRIPT_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

function error_exit {
    echo
    echo "$@"
    exit 1
}
#Trap the killer signals so that we can exit with a good message.
trap "error_exit 'Received signal SIGHUP'" SIGHUP
trap "error_exit 'Received signal SIGINT'" SIGINT
trap "error_exit 'Received signal SIGTERM'" SIGTERM

shopt -s expand_aliases
alias die='error_exit "Error $PROG (@`echo $(( $LINENO - 1 ))`):"'

REPOS=
TEMPLATE=

while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -r|--repositories)
      REPOS="$2"
      shift # past argument
      shift # past value
      ;;
    -t|--template)
      TEMPLATE="$2"
      shift # past argument
      shift # past value
      ;;
    *)    # unknown option
      die "unknown argument $1"
      ;;
  esac
done

[ -z "$REPOS" ] && die "--repositories not specified"
[ -z "$TEMPLATE" ] && die "--template not specified"

WORK=${SCRIPT_DIR}/../work/${REPOS}/
[ -d "/zram" ] && WORK=/zram/templateupdate/${REPOS}/
LOGS=${SCRIPT_DIR}/../logs/${REPOS}/
LOG_FILE=${LOGS}/template.log
LAST_LOG_FILE=${LOGS}/template.old
REPOS_LIST=${SCRIPT_DIR}/config/${REPOS}/repos.lst
POWERSHELL=${SCRIPT_DIR}/scripts/powershell/UpdateFromTemplate.ps1

# OVERRIDE NUGET LOCATIONS
[ -d "/zram" ] && NUGET_PACKAGES=/zram/.nuget/packages/${REPOS}/packages
[ -d "/zram" ] && NUGET_HTTP_CACHE_PATH=/zram/.nuget/packages/${REPOS}/cache
[ -d "/zram" ] && NUGET_PLUGINS_CACHE_PATH=/zram/.nuget/packages/${REPOS}/plugins-cache
[ -d "/zram" ] && dotnet tool restore

echo "Work: ${WORK}"
echo "Logs: ${LOGS}"
echo "Repos.lst: ${REPOS_LIST}"
echo "Powershell: ${POWERSHELL}"
echo "Template: ${TEMPLATE}"

echo "Path: ${PATH}"

[ ! -d "${LOGS}" ] && mkdir -p ${LOGS}
[ ! -d "${WORK}" ] && mkdir -p ${WORK}

[ ! -f "${REPOS_LIST}" ] && die "${REPOS_LIST} does not exist"

[ -f "${LAST_LOG_FILE}" ] && rm ${LAST_LOG_FILE}
[ -f "${LOG_FILE}" ] && mv ${LOG_FILE} ${LAST_LOG_FILE}

echo "Changing to ${SCRIPT_DIR}"
cd ${SCRIPT_DIR}
echo "Running: dotnet pwsh -file ${POWERSHELL} -repos ${REPOS_LIST} -work ${WORK} -templateRepo ${TEMPLATE}"
dotnet pwsh -file ${POWERSHELL} -repos ${REPOS_LIST} -work ${WORK} -templateRepo ${TEMPLATE} > ${LOG_FILE} 2>&1
echo "Done"
